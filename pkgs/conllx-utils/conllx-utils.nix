# Generated by carnix 0.10.0: carnix generate-nix --src . --standalone
{ buildRustCrate, buildRustCrateHelpers, callPackage }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
  cratesIO = (callPackage ./crates-io.nix { });
in
rec {
  crates = cratesIO // rec {
# conllx-utils-0.4.3

    crates.conllx_utils."0.4.3" = deps: { features?(features_.conllx_utils."0.4.3" deps {}) }: buildRustCrate {
      crateName = "conllx-utils";
      version = "0.4.3";
      authors = [ "DanieÌˆl de Kok <me@danieldk.eu>" ];
      src = exclude [ ".git" "target" ] ./.;
      dependencies = mapFeatures features ([
        (cratesIO.crates."colored"."${deps."conllx_utils"."0.4.3"."colored"}" deps)
        (cratesIO.crates."conllx"."${deps."conllx_utils"."0.4.3"."conllx"}" deps)
        (cratesIO.crates."failure"."${deps."conllx_utils"."0.4.3"."failure"}" deps)
        (cratesIO.crates."flate2"."${deps."conllx_utils"."0.4.3"."flate2"}" deps)
        (cratesIO.crates."getopts"."${deps."conllx_utils"."0.4.3"."getopts"}" deps)
        (cratesIO.crates."itertools"."${deps."conllx_utils"."0.4.3"."itertools"}" deps)
        (cratesIO.crates."lazy_static"."${deps."conllx_utils"."0.4.3"."lazy_static"}" deps)
        (cratesIO.crates."maplit"."${deps."conllx_utils"."0.4.3"."maplit"}" deps)
        (cratesIO.crates."petgraph"."${deps."conllx_utils"."0.4.3"."petgraph"}" deps)
        (cratesIO.crates."rand"."${deps."conllx_utils"."0.4.3"."rand"}" deps)
        (cratesIO.crates."regex"."${deps."conllx_utils"."0.4.3"."regex"}" deps)
        (cratesIO.crates."reservoir"."${deps."conllx_utils"."0.4.3"."reservoir"}" deps)
        (cratesIO.crates."stdinout"."${deps."conllx_utils"."0.4.3"."stdinout"}" deps)
        (cratesIO.crates."unicode_normalization"."${deps."conllx_utils"."0.4.3"."unicode_normalization"}" deps)
      ]);
    };
    features_.conllx_utils."0.4.3" = deps: f: updateFeatures f (rec {
      colored."${deps.conllx_utils."0.4.3".colored}".default = true;
      conllx."${deps.conllx_utils."0.4.3".conllx}".default = true;
      conllx_utils."0.4.3".default = (f.conllx_utils."0.4.3".default or true);
      failure."${deps.conllx_utils."0.4.3".failure}".default = true;
      flate2."${deps.conllx_utils."0.4.3".flate2}".default = true;
      getopts."${deps.conllx_utils."0.4.3".getopts}".default = true;
      itertools."${deps.conllx_utils."0.4.3".itertools}".default = true;
      lazy_static."${deps.conllx_utils."0.4.3".lazy_static}".default = true;
      maplit."${deps.conllx_utils."0.4.3".maplit}".default = true;
      petgraph."${deps.conllx_utils."0.4.3".petgraph}".default = true;
      rand."${deps.conllx_utils."0.4.3".rand}".default = true;
      regex."${deps.conllx_utils."0.4.3".regex}".default = true;
      reservoir."${deps.conllx_utils."0.4.3".reservoir}".default = true;
      stdinout."${deps.conllx_utils."0.4.3".stdinout}".default = true;
      unicode_normalization."${deps.conllx_utils."0.4.3".unicode_normalization}".default = true;
    }) [
      (cratesIO.features_.colored."${deps."conllx_utils"."0.4.3"."colored"}" deps)
      (cratesIO.features_.conllx."${deps."conllx_utils"."0.4.3"."conllx"}" deps)
      (cratesIO.features_.failure."${deps."conllx_utils"."0.4.3"."failure"}" deps)
      (cratesIO.features_.flate2."${deps."conllx_utils"."0.4.3"."flate2"}" deps)
      (cratesIO.features_.getopts."${deps."conllx_utils"."0.4.3"."getopts"}" deps)
      (cratesIO.features_.itertools."${deps."conllx_utils"."0.4.3"."itertools"}" deps)
      (cratesIO.features_.lazy_static."${deps."conllx_utils"."0.4.3"."lazy_static"}" deps)
      (cratesIO.features_.maplit."${deps."conllx_utils"."0.4.3"."maplit"}" deps)
      (cratesIO.features_.petgraph."${deps."conllx_utils"."0.4.3"."petgraph"}" deps)
      (cratesIO.features_.rand."${deps."conllx_utils"."0.4.3"."rand"}" deps)
      (cratesIO.features_.regex."${deps."conllx_utils"."0.4.3"."regex"}" deps)
      (cratesIO.features_.reservoir."${deps."conllx_utils"."0.4.3"."reservoir"}" deps)
      (cratesIO.features_.stdinout."${deps."conllx_utils"."0.4.3"."stdinout"}" deps)
      (cratesIO.features_.unicode_normalization."${deps."conllx_utils"."0.4.3"."unicode_normalization"}" deps)
    ];


# end

  };

  conllx_utils = crates.crates.conllx_utils."0.4.3" deps;
  __all = [ (conllx_utils {}) ];
  deps.aho_corasick."0.6.10" = {
    memchr = "2.2.0";
  };
  deps.ansi_term."0.9.0" = {};
  deps.approx."0.1.1" = {};
  deps.autocfg."0.1.2" = {};
  deps.backtrace."0.3.18" = {
    backtrace_sys = "0.1.28";
    cfg_if = "0.1.9";
    libc = "0.2.55";
    rustc_demangle = "0.1.14";
    autocfg = "0.1.2";
  };
  deps.backtrace_sys."0.1.28" = {
    libc = "0.2.55";
    cc = "1.0.37";
  };
  deps.cc."1.0.37" = {};
  deps.cfg_if."0.1.9" = {};
  deps.cgmath."0.16.1" = {
    approx = "0.1.1";
    num_traits = "0.1.43";
    rand = "0.4.6";
  };
  deps.colored."1.8.0" = {
    lazy_static = "1.3.0";
    winconsole = "0.10.0";
  };
  deps.conllx."0.10.2" = {
    failure = "0.1.5";
    itertools = "0.7.11";
    lazy_init = "0.3.0";
    petgraph = "0.4.13";
  };
  deps.conllx_utils."0.4.3" = {
    colored = "1.8.0";
    conllx = "0.10.2";
    failure = "0.1.5";
    flate2 = "0.2.20";
    getopts = "0.2.19";
    itertools = "0.6.5";
    lazy_static = "0.2.11";
    maplit = "0.1.6";
    petgraph = "0.4.13";
    rand = "0.4.6";
    regex = "0.2.11";
    reservoir = "0.2.0";
    stdinout = "0.4.0";
    unicode_normalization = "0.1.8";
  };
  deps.difference."1.0.0" = {};
  deps.either."1.5.2" = {};
  deps.failure."0.1.5" = {
    backtrace = "0.3.18";
    failure_derive = "0.1.5";
  };
  deps.failure_derive."0.1.5" = {
    proc_macro2 = "0.4.30";
    quote = "0.6.12";
    syn = "0.15.34";
    synstructure = "0.10.2";
  };
  deps.fixedbitset."0.1.9" = {};
  deps.flate2."0.2.20" = {
    libc = "0.2.55";
    miniz_sys = "0.1.12";
  };
  deps.fuchsia_cprng."0.1.1" = {};
  deps.getopts."0.2.19" = {
    unicode_width = "0.1.5";
  };
  deps.itertools."0.6.5" = {
    either = "1.5.2";
  };
  deps.itertools."0.7.11" = {
    either = "1.5.2";
  };
  deps.lazy_init."0.3.0" = {};
  deps.lazy_static."0.2.11" = {};
  deps.lazy_static."1.3.0" = {};
  deps.libc."0.2.55" = {};
  deps.maplit."0.1.6" = {};
  deps.memchr."2.2.0" = {};
  deps.miniz_sys."0.1.12" = {
    libc = "0.2.55";
    cc = "1.0.37";
  };
  deps.num_traits."0.1.43" = {
    num_traits = "0.2.6";
  };
  deps.num_traits."0.2.6" = {};
  deps.ordermap."0.3.5" = {};
  deps.petgraph."0.4.13" = {
    fixedbitset = "0.1.9";
    ordermap = "0.3.5";
  };
  deps.pretty_assertions."0.3.4" = {
    ansi_term = "0.9.0";
    difference = "1.0.0";
  };
  deps.proc_macro2."0.4.30" = {
    unicode_xid = "0.1.0";
  };
  deps.quote."0.6.12" = {
    proc_macro2 = "0.4.30";
  };
  deps.rand."0.3.23" = {
    libc = "0.2.55";
    rand = "0.4.6";
  };
  deps.rand."0.4.6" = {
    rand_core = "0.3.1";
    rdrand = "0.4.0";
    fuchsia_cprng = "0.1.1";
    libc = "0.2.55";
    winapi = "0.3.7";
  };
  deps.rand_core."0.3.1" = {
    rand_core = "0.4.0";
  };
  deps.rand_core."0.4.0" = {};
  deps.rdrand."0.4.0" = {
    rand_core = "0.3.1";
  };
  deps.regex."0.2.11" = {
    aho_corasick = "0.6.10";
    memchr = "2.2.0";
    regex_syntax = "0.5.6";
    thread_local = "0.3.6";
    utf8_ranges = "1.0.2";
  };
  deps.regex_syntax."0.5.6" = {
    ucd_util = "0.1.3";
  };
  deps.reservoir."0.2.0" = {
    rand = "0.3.23";
  };
  deps.rgb."0.8.13" = {};
  deps.rustc_demangle."0.1.14" = {};
  deps.smallvec."0.6.9" = {};
  deps.stdinout."0.4.0" = {};
  deps.syn."0.15.34" = {
    proc_macro2 = "0.4.30";
    quote = "0.6.12";
    unicode_xid = "0.1.0";
  };
  deps.synstructure."0.10.2" = {
    proc_macro2 = "0.4.30";
    quote = "0.6.12";
    syn = "0.15.34";
    unicode_xid = "0.1.0";
  };
  deps.thread_local."0.3.6" = {
    lazy_static = "1.3.0";
  };
  deps.ucd_util."0.1.3" = {};
  deps.unicode_normalization."0.1.8" = {
    smallvec = "0.6.9";
  };
  deps.unicode_width."0.1.5" = {};
  deps.unicode_xid."0.1.0" = {};
  deps.utf8_ranges."1.0.2" = {};
  deps.winapi."0.3.7" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
  deps.winconsole."0.10.0" = {
    cgmath = "0.16.1";
    lazy_static = "1.3.0";
    rgb = "0.8.13";
    winapi = "0.3.7";
  };
}
